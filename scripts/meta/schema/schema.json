{
	"type": "object",
	"description": "Schema for web API data structures",
	"required": [
		"api",
		"model",
		"modelDescription",
		"modelFields"
	],
	"properties": {
		"api": {
			"type": "string",
			"description": "Name of the API you're pulling from (i.e. coinbase, polygoin, etc)"
		},
		"model": {
			"type": "string",
			"description": "camelcase name of the model"
		},
		"modelDescription": {
			"type": "string",
			"description": "A short description of generate go model"
		},
		"modelOnly": {
			"type": "boolean",
			"description": "Only generate the model and the graphqls type"
		},
		"endpoints": {
			"type": "array",
			"description": "endpoints associated with the model",
			"items": {
				"type": "object",
				"required": [
					"path",
					"enumRoot",
					"description",
					"httpMethod",
					"documentation"
				],
				"properties": {
					"path": {
						"type": "string",
						"description": "a url endpiont associated with the model"
					},
					"scope": {
						"type": "string",
						"description": "oauth 2.0 scope"
					},
					"documentation": {
						"type": "string",
						"description": "the api documentation url"
					},
					"enumRoot": {
						"type": "string",
						"description": "The root of the endpoint enum"
					},
					"slice": {
						"type": "boolean",
						"description": "The return valu is a slice or not"
					},
					"returnType": {
						"type": "string",
						"description": "A custom return type that is not the underlying go struct / type created as the 'model'."
					},
					"httpMethod": {
						"type": "string",
						"description": "The HTTP method indended to be used for the endpoint."
					},
					"description": {
						"type": "string",
						"description": "description from the api"
					},
					"body": {
						"type": "array",
						"description": "Fields to generate golang packages to store and access data from iex api requests",
						"items": {
							"type": "object",
							"required": [
								"identifier",
								"goType"
							],
							"properties": {
								"identifier": {
									"type": "string",
									"description": "identifier of the column from the source data api"
								},
								"goType": {
									"type": "string",
									"description": "go type"
								},
								"required": {
									"type": "boolean",
									"description": "if the field is required"
								}
							}
						}
					},
					"queryParams": {
						"type": "array",
						"description": "Fields to generate golang packages to store and access data from iex api requests",
						"items": {
							"type": "object",
							"required": [
								"identifier",
								"goType"
							],
							"properties": {
								"identifier": {
									"type": "string",
									"description": "identifier of the column from the source data api"
								},
								"goType": {
									"type": "string",
									"description": "go type"
								},
								"required": {
									"type": "boolean",
									"description": "if the field is required"
								}
							}
						}
					}
				}
			}
		},
		"nonStruct": {
			"type": "string",
			"description": "The type of the model if it's not a struct."
		},
		"modelFields": {
			"type": "array",
			"description": "Fields to generate golang packages to store and access data from iex api requests",
			"items": {
				"type": "object",
				"required": [
					"identifier",
					"goType"
				],
				"properties": {
					"identifier": {
						"type": "string",
						"description": "identifier of the column from the source data api"
					},
					"json": {
						"type": "string",
						"description": "json type"
					},
					"goType": {
						"type": "string",
						"description": "go type"
					},
					"datetimeLayout": {
						"type": "string",
						"description": "layout to use to unmarshal date time"
					},
					"description": {
						"type": "string",
						"description": "a description of the column that will appears a comment above the resource"
					},
					"unmarshaler": {
						"type": "string",
						"description": "name of the function to unmarshal with"
					}
				}
			}
		},
		"customUnmarshaler": {
			"type": "string",
			"description": "a string that represents a go function for a custom UnmarshalJSON type."
		},
		"modelTests": {
			"type": "array",
			"description": "Tests for the model",
			"items": {
				"type": "object",
				"required": [
					"name"
				],
				"properties": {
					"name": {
						"type": "string",
						"description": "name of the test"
					},
					"description": {
						"type": "string",
						"description": "name of the test"
					},
					"json": {
						"type": "string",
						"description": "json value for the type"
					}
				}
			}
		}
	}
}
