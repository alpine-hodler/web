{
	"api": "twitter",
	"model": "bookmarks",
	"modelDescription": "TODO",
	"endpoints": [
		{
			"path": "/2/users/{user_id}/bookmarks/{tweet_id}",
			"documentation": "https://developer.twitter.com/en/docs/twitter-api/tweets/bookmarks/api-reference/delete-users-id-bookmarks-tweet_id",
			"httpMethod": "DELETE",
			"enumRoot": "DeleteBookmarks",
			"description": "DeleteBookmarks are a core feature of the Twitter app that allows you to “save” Tweets and easily access them later. With these endpoints, you can retrieve, create, delete or build solutions to manage your Bookmarks via the API.\n\nThis request requires OAuth 2.0 Authorization Code with PKCE"
		},
		{
			"path": "/2/users/{user_id}/bookmarks",
			"documentation": "https://developer.twitter.com/en/docs/twitter-api/tweets/bookmarks/api-reference/post-users-id-bookmarks",
			"httpMethod": "POST",
			"enumRoot": "CreateBookmarks",
			"description": "CreateBookmarks causes the user ID of an authenticated user identified in the path parameter to Bookmark the target Tweet provided in the request body.\n\nThis request requires OAuth 2.0 Authorization Code with PKCE."
		},
		{
			"path": "/2/users/{user_id}/bookmarks",
			"documentation": "https://developer.twitter.com/en/docs/twitter-api/tweets/bookmarks/api-reference/get-users-id-bookmarks",
			"httpMethod": "GET",
			"enumRoot": "Bookmarks",
			"scope": "tweet.read users.read bookmark.read",
			"queryParams": [
				{
					"identifier": "expansions",
					"goType": "Expansions",
					"description": "Expansions enable you to request additional data objects that relate to the originally returned Tweets. Submit a list of desired expansions in a comma-separated list without spaces. The ID that represents the expanded data object will be included directly in the Tweet data object, but the expanded object metadata will be returned within the includes response object, and will also include the ID so that you can match this data object to the original Tweet object."
				},
				{
					"identifier": "max_results",
					"goType": "uint8",
					"description": "MaxResults are the maximum number of results to be returned per page. This can be a number between 1 and 100. By default, each page will return 100 results."
				},
				{
					"identifier": "media.fields",
					"goType": "MediaFields",
					"description": "MediaField enables you to select which specific media fields will deliver in each returned Tweet. Specify the desired fields in a comma-separated list without spaces between commas and fields. The Tweet will only return media fields if the Tweet contains media and if you've also included the expansions=attachments.media_keys query parameter in your request. While the media ID will be located in the Tweet object, you will find this ID and all additional media fields in the includes data object."
				},
				{
					"identifier": "pagination_token",
					"goType": "string",
					"description": "Pagination token is used to request the next page of results if all results weren't returned with the latest request, or to go back to the previous page of results. To return the next page, pass the next_token returned in your previous response. To go back one page, pass the previous_token returned in your previous response."
				},
				{
					"identifier": "place.fields",
					"goType": "PlaceFields",
					"description": "PlaceFields enables you to select which specific place fields will deliver in each returned Tweet. Specify the desired fields in a comma-separated list without spaces between commas and fields. The Tweet will only return place fields if the Tweet contains a place and if you've also included the expansions=geo.place_id query parameter in your request. While the place ID will be located in the Tweet object, you will find this ID and all additional place fields in the includes data object."
				},
				{
					"identifier": "poll.fields",
					"goType": "PollFields",
					"description": "PollFields enables you to select which specific poll fields will deliver in each returned Tweet. Specify the desired fields in a comma-separated list without spaces between commas and fields. The Tweet will only return poll fields if the Tweet contains a poll and if you've also included the expansions=attachments.poll_ids query parameter in your request. While the poll ID will be located in the Tweet object, you will find this ID and all additional poll fields in the includes data object."
				},
				{
					"identifier": "tweet.fields",
					"goType": "TweetFields",
					"description": "TweetFields enables you to select which specific Tweet fields will deliver in each returned Tweet object. Specify the desired fields in a comma-separated list without spaces between commas and fields. You can also pass the expansions=referenced_tweets.id expansion to return the specified fields for both the original Tweet and any included referenced Tweets. The requested Tweet fields will display in both the original Tweet data object, as well as in the referenced Tweet expanded data object that will be located in the includes data object."
				},
				{
					"identifier": "user.fields",
					"goType": "UserFields",
					"description": "TweetFields enables you to select which specific user fields will deliver in each returned Tweet. Specify the desired fields in a comma-separated list without spaces between commas and fields. While the user ID will be located in the original Tweet object, you will find this ID and all additional user fields in the includes data object."
				}
			],
			"description": "Bookmarks allows you to get information about a authenticated user’s 800 most recent bookmarked Tweets.\n\nThis request requires OAuth 2.0 Authorization Code with PKCE."
		}
	],
	"modelFields": [
		{
			"identifier": "data",
			"goType": "[]*Bookmark"
		},
		{
			"identifier": "meta",
			"goType": "Meta"
		}
	]
}
